name: CI

on:
  push:
    branches: [ '*' ]
    tags:
      - v*

jobs:
  linux_aarch64:
    name: Linux AARCH64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target aarch64-unknown-linux-gnu
      - name: Display structure of files
        run: ls -R

      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/**/release/fail2ban-calico

  linux_x86_64:
    name: Linux X86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target x86_64-unknown-linux-gnu
      - name: Display structure of files
        run: ls -R

      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/**/release/fail2ban-calico

  buildx:
    runs-on: ubuntu-latest
    needs:
      - linux_aarch64
      - linux_x86_64

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: target

      - name: Display structure of files
        run: ls -R

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=stoub/fail2ban-calico
          DOCKER_PLATFORMS=linux/arm64,linux/amd64
          VERSION=${GITHUB_SHA::8}
  
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
  
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi
  
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile ./
  
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3.3.1
  
      - name: Docker Buildx (build)
        run: |
            docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
  
      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
  
      - name: Inspect image
        if: always() && github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

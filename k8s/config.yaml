---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fail2ban-config
  namespace: fail2ban
data:
  calico-action.conf: |
    [Definition]
    actionstart =
    actionstop =
    actioncheck =
    actionban = fail2ban-calico ban <ip>
    actionunban = fail2ban-calico unban <ip>

  fail2ban.local: |
    # Fail2Ban main configuration file
    #
    # Comments: use '#' for comment lines and ';' (following a space) for inline comments
    #
    # Changes:  in most of the cases you should not modify this
    #           file, but provide customizations in fail2ban.local file, e.g.:
    #
    # [Definition]
    # loglevel = DEBUG
    #

    [Definition]

    # Option: loglevel
    # Notes.: Set the log level output.
    #         CRITICAL
    #         ERROR
    #         WARNING
    #         NOTICE
    #         INFO
    #         DEBUG
    # Values: [ LEVEL ]  Default: ERROR
    #
    loglevel = INFO

    # Option: logtarget
    # Notes.: Set the log target. This could be a file, SYSLOG, STDERR or STDOUT.
    #         Only one log target can be specified.
    #         If you change logtarget from the default value and you are
    #         using logrotate -- also adjust or disable rotation in the
    #         corresponding configuration file
    #         (e.g. /etc/logrotate.d/fail2ban on Debian systems)
    # Values: [ STDOUT | STDERR | SYSLOG | SYSOUT | FILE ]  Default: STDERR
    #
    logtarget = STDOUT

    # Option: syslogsocket
    # Notes: Set the syslog socket file. Only used when logtarget is SYSLOG
    #        auto uses platform.system() to determine predefined paths
    # Values: [ auto | FILE ]  Default: auto
    syslogsocket = auto

    # Option: socket
    # Notes.: Set the socket file. This is used to communicate with the daemon. Do
    #         not remove this file when Fail2ban runs. It will not be possible to
    #         communicate with the server afterwards.
    # Values: [ FILE ]  Default: /var/run/fail2ban/fail2ban.sock
    #
    socket = /var/run/fail2ban/fail2ban.sock

    # Option: pidfile
    # Notes.: Set the PID file. This is used to store the process ID of the
    #         fail2ban server.
    # Values: [ FILE ]  Default: /var/run/fail2ban/fail2ban.pid
    #
    pidfile = /var/run/fail2ban/fail2ban.pid

    # Options: dbfile
    # Notes.: Set the file for the fail2ban persistent data to be stored.
    #         A value of ":memory:" means database is only stored in memory
    #         and data is lost when fail2ban is stopped.
    #         A value of "None" disables the database.
    # Values: [ None :memory: FILE ] Default: /var/lib/fail2ban/fail2ban.sqlite3
    dbfile = None

    # Options: dbpurgeage
    # Notes.: Sets age at which bans should be purged from the database
    # Values: [ SECONDS ] Default: 86400 (24hours)
    # dbpurgeage = 1d

  jail.local: |
    [DEFAULT]

    # "ignoreip" can be an IP address, a CIDR mask or a DNS host. Fail2ban will not
    # ban a host which matches an address in this list. Several addresses can be
    # defined using space separator.
    ignoreip = 127.0.0.1/8

    # "bantime" is the number of seconds that a host is banned.
    bantime  = 600

    # A host is banned if it has generated "maxretry" during the last "findtime"
    # seconds.
    findtime = 600
    maxretry = 3

    # "backend" specifies the backend used to get files modification.
    # Available options are "pyinotify", "gamin", "polling" and "auto".
    # This option can be overridden in each jail as well.
    #
    # pyinotify: requires pyinotify (a file alteration monitor) to be installed.
    #            If pyinotify is not installed, Fail2ban will use auto.
    # gamin:     requires Gamin (a file alteration monitor) to be installed.
    #            If Gamin is not installed, Fail2ban will use auto.
    # polling:   uses a polling algorithm which does not require external libraries.
    # auto:      will try to use the following backends, in order:
    #            pyinotify, gamin, polling.
    #
    # For unknown reason, should be "polling"
    backend = polling

    #
    # Destination email address used solely for the interpolations in
    # jail.{conf,local} configuration files.
    destemail = root@localhost

    #
    # Name of the sender for mta actions
    sendername = Fail2Ban

    # Email address of the sender
    sender = fail2ban@localhost

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fail2ban-jails
  namespace: fail2ban
data:
  01_mail.local: |
    [dovecot]
    enabled = true
    logpath = /var/log/pods/home_mail-*/mail/*.log
    action    = calico-action

    [postfix]
    enabled = true
    logpath = /var/log/pods/home_mail-*/mail/*.log
    action    = calico-action

    [custom-postfix-sasl]
    enabled = true
    logpath = /var/log/pods/home_mail-*/mail/*.log
    action    = calico-action

    [custom-vaultwarden]
    enabled = true
    logpath = /var/log/pods/home_bitwarden-*/bitwarden/*.log
    action    = calico-action

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fail2ban-filters
  namespace: fail2ban
data:
  custom-postfix-sasl.local: |
    # Fail2Ban filter for postfix authentication failures
    [INCLUDES]
    before = common.conf
    [Definition]
    _daemon = postfix(-\w+)?/\w+(?:/smtp[ds])?
    failregex = %(__prefix_line)swarning: [-._\w]+\[<HOST>\]: SASL (?:LOGIN|PLAIN|(?:CRAM|DIGEST)-MD5) authentication failed(: [ A-Za-z0-9+/]*={0,2})?\s*$
  custom-vaultwarden.local: |
    # Fail2Ban filter for postfix authentication failures
    [INCLUDES]
    before = common.conf
    [Definition]
    _daemon = postfix(-\w+)?/\w+(?:/smtp[ds])?
    failregex = %(__prefix_line)sUsername or password is incorrect. Try again. IP: <HOST>\.
